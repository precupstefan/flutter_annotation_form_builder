import 'entity_info.dart';

class CodeChunks {
  static String createFile(
          EntityInfo info, List<Map<String, dynamic>> inputs) =>
      """
    // GENERATED CODE - DO NOT MODIFY BY HAND
    // This code was generated by ObjectBox. To update it run the generator again:
    // With a Flutter package, run `flutter pub run build_runner build`.
    // With a Dart package, run `dart run build_runner build`.
    // See also https://docs.objectbox.io/getting-started#generate-objectbox-code
    // ignore_for_file: camel_case_types
    
    import 'package:flutter/material.dart';
    import 'package:flutter_form_builder/flutter_form_builder.dart';
    import '${sorted(info.imports).join("';\n import '")}';
    
    class ${info.name}FormWidget extends StatelessWidget {
    
    ${info.name}FormWidget({Key? key,
      ${info.shouldBePopulatedWithEntity ? "required this." + info.name.toLowerCase() + "," : ""}
    }) : super(key: key);
    
    final ${info.shouldBePopulatedWithEntity ? info.name + " " + info.name.toLowerCase() + ";" : ""}
    final _formKey = GlobalKey<FormBuilderState>();
    
    @override
    Widget build(BuildContext context) {
      return FormBuilder(
                  key: _formKey,
                  child: Column(
                    children: [
                    ${addInputs(info, inputs)}
                    ]
                    ), 
                  ); 
    }
    }
      """;

  static List<T> sorted<T>(List<T> list) {
    list.sort();
    return list;
  }

  static String addInputs(EntityInfo info, List<Map<String, dynamic>> inputs) {
    return inputs.fold(
        "",
        (String previousValue, element) =>
            previousValue + addInput(info, element));
  }

  static String addInput(EntityInfo info, Map<String, dynamic> input) {
    return """
    FormBuilder${input["inputType"]}(
      name: "${input["propertyName"]}",
      ${input["options"].entries.fold("", (previousValue, MapEntry<String?, String?> element) => previousValue + "${element.key}:${element.value},")}
    ),
    """;
  }
}
